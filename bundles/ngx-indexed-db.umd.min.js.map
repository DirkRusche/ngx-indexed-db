{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-indexed-db/lib/ngx-indexed-db.ts","ng://ngx-indexed-db/utils/index.ts","ng://ngx-indexed-db/lib/ngx-indexed-db.meta.ts","ng://ngx-indexed-db/lib/ngx-indexed-db.service.ts","ng://ngx-indexed-db/lib/ngxindexeddb.module.ts"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","Object","create","openDatabase","indexedDB","dbName","version","upgradeCallback","db","request","open","onsuccess","event","onerror","error","onupgradeneeded","CreateObjectStore","storeSchemas","migrationFactory","database","forEach","storeSchema","objectStoreNames","contains","store","objectStore_1","createObjectStore","storeConfig","schema","createIndex","name","keypath","options","storeMigrations","keys","map","k","parseInt","filter","oldVersion","sort","a","b","transaction","close","target","DBMode","validateBeforeTransaction","storeName","validateStoreName","createTransaction","trans","dbMode","oncomplete","complete","onabort","abort","optionsGenerator","type","CONFIG_TOKEN","InjectionToken","NgxIndexedDBService","dbConfig","platformId","Error","isBrowser","isPlatformBrowser","window","mozIndexedDB","webkitIndexedDB","msIndexedDB","objectStoresMeta","prototype","add","key","_this","objectStore","evt","catch","reason","getByKey","get","getByID","id","getAll","_a","ResultAll","update","put","deleteRecord","delete","clear","deleteDatabase","deleteDBRequest","onblocked","e_1","openCursor","cursorCallback","keyRange","undefined","openCursorByIndex","indexName","index","getAllByIndex","data","cursor","continue","getByIndex","count","Injectable","Inject","args","PLATFORM_ID","NgxIndexedDBModule","forRoot","ngModule","providers","provide","useValue","NgModule","declarations","imports","CommonModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export interface ObjectStoreMeta {\n\tstore: string;\n\tstoreConfig: { keyPath: string; autoIncrement: boolean; [key: string]: any };\n\tstoreSchema: ObjectStoreSchema[];\n}\n\nexport interface ObjectStoreSchema {\n\tname: string;\n\tkeypath: string | string[];\n\toptions: { unique: boolean; [key: string]: any };\n}\nexport type Key = string | number | Date | ArrayBufferView | ArrayBuffer | IDBArrayKey | IDBKeyRange;\nexport interface IndexDetails {\n\tindexName: string;\n\torder: string;\n}\nexport interface RequestEventTarget<T> extends EventTarget {\n\tresult: T | T[];\n}\n\nexport interface RequestEvent<T> extends Event {\n\ttarget: RequestEventTarget<T>;\n}\n\nexport function openDatabase(indexedDB: IDBFactory, dbName: string, version: number, upgradeCallback?: Function) {\n\treturn new Promise<IDBDatabase>((resolve, reject) => {\n\t\tif (!indexedDB) {\n\t\t\treject('IndexedDB not available');\n\t\t}\n\t\tconst request = indexedDB.open(dbName, version);\n\t\tlet db: IDBDatabase;\n\t\trequest.onsuccess = (event: Event) => {\n\t\t\tdb = request.result;\n\t\t\tresolve(db);\n\t\t};\n\t\trequest.onerror = (event: Event) => {\n\t\t\treject(`IndexedDB error: ${request.error}`);\n\t\t};\n\t\tif (typeof upgradeCallback === 'function') {\n\t\t\trequest.onupgradeneeded = (event: Event) => {\n\t\t\t\tupgradeCallback(event, db);\n\t\t\t};\n\t\t}\n\t});\n}\n\nexport function CreateObjectStore(\n\tindexedDB: IDBFactory,\n\tdbName: string,\n\tversion: number,\n\tstoreSchemas: ObjectStoreMeta[],\n\tmigrationFactory?: () => { [key: number]: (db: IDBDatabase, transaction: IDBTransaction) => void }\n) {\n\tif (!indexedDB) {\n\t\treturn;\n\t}\n\tconst request: IDBOpenDBRequest = indexedDB.open(dbName, version);\n\n\trequest.onupgradeneeded = function(event: IDBVersionChangeEvent) {\n\t\tconst database: IDBDatabase = (event.target as any).result;\n\n\t\tstoreSchemas.forEach((storeSchema: ObjectStoreMeta) => {\n\t\t\tif (!database.objectStoreNames.contains(storeSchema.store)) {\n\t\t\t\tconst objectStore = database.createObjectStore(storeSchema.store, storeSchema.storeConfig);\n\t\t\t\tstoreSchema.storeSchema.forEach((schema: ObjectStoreSchema) => {\n\t\t\t\t\tobjectStore.createIndex(schema.name, schema.keypath, schema.options);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tconst storeMigrations = migrationFactory && migrationFactory();\n\t\tif (storeMigrations) {\n\t\t\tObject.keys(storeMigrations)\n\t\t\t\t.map(k => parseInt(k, 10))\n\t\t\t\t.filter(v => v > event.oldVersion)\n\t\t\t\t.sort((a, b) => a - b)\n\t\t\t\t.forEach(v => {\n\t\t\t\t\tstoreMigrations[v](database, request.transaction);\n\t\t\t\t});\n\t\t}\n\n\t\tdatabase.close();\n\t};\n\n\trequest.onsuccess = function(e: any) {\n\t\te.target.result.close();\n\t};\n}\n\nexport enum DBMode {\n\treadonly = 'readonly',\n\treadwrite = 'readwrite'\n}\n","export interface Options {\n\tstoreName: string;\n\tdbMode: IDBTransactionMode;\n\terror: (e: Event) => any;\n\tcomplete: (e: Event) => any;\n\tabort?: any;\n}\n\nexport function validateStoreName(db: IDBDatabase, storeName: string) {\n\treturn db.objectStoreNames.contains(storeName);\n}\n\nexport function validateBeforeTransaction(db: IDBDatabase, storeName: string, reject: Function) {\n\tif (!db) {\n\t\treject('You need to use the openDatabase function to create a database before you query it!');\n\t}\n\tif (!validateStoreName(db, storeName)) {\n\t\treject(`objectStore does not exists: ${storeName}`);\n\t}\n}\n\nexport function createTransaction(db: IDBDatabase, options: Options): IDBTransaction {\n\tlet trans: IDBTransaction = db.transaction(options.storeName, options.dbMode);\n\ttrans.onerror = options.error;\n\ttrans.oncomplete = options.complete;\n\ttrans.onabort = options.abort;\n\treturn trans;\n}\n\nexport function optionsGenerator(type: any, storeName: any, reject: Function, resolve: Function): Options {\n\treturn {\n\t\tstoreName: storeName,\n\t\tdbMode: type,\n\t\terror: (e: Event) => {\n\t\t\treject(e);\n\t\t},\n\t\tcomplete: (e: Event) => {\n\t\t\tresolve();\n\t\t},\n\t\tabort: (e: Event) => {\n\t\t\treject(e);\n\t\t}\n\t};\n}\n","import { InjectionToken } from '@angular/core';\n\nexport interface DBConfig {\n\tname: string;\n\tversion: number;\n\tobjectStoresMeta: ObjectStoreMeta[];\n\tmigrationFactory?: () => { [key: number]: (db: IDBDatabase, transaction: IDBTransaction) => void };\n}\n\nexport interface ObjectStoreMeta {\n\tstore: string;\n\tstoreConfig: { keyPath: string; autoIncrement: boolean; [key: string]: any };\n\tstoreSchema: ObjectStoreSchema[];\n}\n\nexport interface ObjectStoreSchema {\n\tname: string;\n\tkeypath: string;\n\toptions: { unique: boolean; [key: string]: any };\n}\n\nexport const CONFIG_TOKEN = new InjectionToken<DBConfig>(null);\n","import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { openDatabase, DBMode, Key, RequestEvent, CreateObjectStore, ObjectStoreMeta } from './ngx-indexed-db';\nimport { createTransaction, optionsGenerator, validateBeforeTransaction } from '../utils';\nimport { CONFIG_TOKEN, DBConfig } from './ngx-indexed-db.meta';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class NgxIndexedDBService {\n\tprivate readonly isBrowser: boolean;\n\tindexedDB;\n\n\tconstructor(@Inject(CONFIG_TOKEN) private dbConfig: DBConfig, @Inject(PLATFORM_ID) private platformId: any) {\n\t\tif (!dbConfig.name) {\n\t\t\tthrow new Error('NgxIndexedDB: Please, provide the dbName in the configuration');\n\t\t}\n\t\tif (!dbConfig.version) {\n\t\t\tthrow new Error('NgxIndexedDB: Please, provide the db version in the configuration');\n\t\t}\n\t\tthis.isBrowser = isPlatformBrowser(platformId);\n\t\tif (this.isBrowser) {\n\t\t\tthis.indexedDB =\n\t\t\t\twindow.indexedDB ||\n\t\t\t\t(<any>window).mozIndexedDB ||\n\t\t\t\t(<any>window).webkitIndexedDB ||\n\t\t\t\t(<any>window).msIndexedDB;\n\t\t\tCreateObjectStore(\n\t\t\t\tthis.indexedDB,\n\t\t\t\tdbConfig.name,\n\t\t\t\tdbConfig.version,\n\t\t\t\tdbConfig.objectStoresMeta,\n\t\t\t\tdbConfig.migrationFactory\n\t\t\t);\n\t\t}\n\t}\n\n\tcreateObjectStore(\n\t\tstoreSchema: ObjectStoreMeta,\n\t\tmigrationFactory?: () => { [key: number]: (db: IDBDatabase, transaction: IDBTransaction) => void }\n\t) {\n\t\tlet storeSchemas: ObjectStoreMeta[] = [storeSchema];\n\t\tCreateObjectStore(this.indexedDB, this.dbConfig.name, this.dbConfig.version, storeSchemas, migrationFactory);\n\t}\n\n\tadd<T>(storeName: string, value: T, key?: any) {\n\t\treturn new Promise<number>((resolve, reject) => {\n\t\t\topenDatabase(this.indexedDB, this.dbConfig.name, this.dbConfig.version).then((db: IDBDatabase) => {\n\t\t\t\tlet transaction = createTransaction(db, optionsGenerator(DBMode.readwrite, storeName, reject, resolve)),\n\t\t\t\t\tobjectStore = transaction.objectStore(storeName);\n\n\t\t\t\tlet request: IDBRequest;\n\t\t\t\tif (key) {\n\t\t\t\t\trequest = objectStore.add(value, key);\n\t\t\t\t} else {\n\t\t\t\t\trequest = objectStore.add(value);\n\t\t\t\t}\n\n\t\t\t\trequest.onsuccess = (evt: any) => {\n\t\t\t\t\tkey = evt.target.result;\n\t\t\t\t\tresolve(key);\n\t\t\t\t};\n\t\t\t}).catch(reason => reject(reason));\n\t\t});\n\t}\n\n\tgetByKey<T>(storeName: string, key: any) {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\topenDatabase(this.indexedDB, this.dbConfig.name, this.dbConfig.version).then((db: IDBDatabase) => {\n\t\t\t\tlet transaction = createTransaction(db, optionsGenerator(DBMode.readonly, storeName, reject, resolve)),\n\t\t\t\t\tobjectStore = transaction.objectStore(storeName);\n\t\t\t\tlet request = objectStore.get(key);\n\t\t\t\trequest.onsuccess = function(event: Event) {\n\t\t\t\t\tresolve((<any>event.target).result);\n\t\t\t\t};\n\t\t\t\trequest.onerror = function(event: Event) {\n\t\t\t\t\treject(event);\n\t\t\t\t};\n\t\t\t}).catch(reason => reject(reason));\n\t\t});\n\t}\n\n\tgetByID<T>(storeName: string, id: string | number) {\n\t\treturn new Promise<T>((resolve, reject) => {\n\t\t\topenDatabase(this.indexedDB, this.dbConfig.name, this.dbConfig.version).then((db: IDBDatabase) => {\n\t\t\t\tvalidateBeforeTransaction(db, storeName, reject);\n\t\t\t\tlet transaction = createTransaction(db, optionsGenerator(DBMode.readonly, storeName, reject, resolve)),\n\t\t\t\t\tobjectStore = transaction.objectStore(storeName),\n\t\t\t\t\trequest: IDBRequest;\n\t\t\t\trequest = objectStore.get(id);\n\t\t\t\trequest.onsuccess = function(event: Event) {\n\t\t\t\t\tresolve((event.target as any).result as T);\n\t\t\t\t};\n\t\t\t}).catch(reason => reject(reason));\n\t\t});\n\t}\n\n\tgetAll<T>(storeName: string) {\n\t\treturn new Promise<T[]>((resolve, reject) => {\n\t\t\topenDatabase(this.indexedDB, this.dbConfig.name, this.dbConfig.version).then(db => {\n\t\t\t\tvalidateBeforeTransaction(db, storeName, reject);\n\t\t\t\tlet transaction = createTransaction(db, optionsGenerator(DBMode.readonly, storeName, reject, resolve)),\n\t\t\t\t\tobjectStore = transaction.objectStore(storeName),\n\t\t\t\t\tresult: Array<any> = [];\n\n\t\t\t\tconst request: IDBRequest = objectStore.getAll();\n\n\t\t\t\trequest.onerror = function(e) {\n\t\t\t\t\treject(e);\n\t\t\t\t};\n\t\t\t\trequest.onsuccess = function({ target: { result: ResultAll } }: RequestEvent<T>) {\n\t\t\t\t\tresolve(ResultAll as T[]);\n\t\t\t\t};\n\t\t\t}).catch(reason => reject(reason));\n\t\t});\n\t}\n\n\tupdate<T>(storeName: string, value: T, key?: any) {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\topenDatabase(this.indexedDB, this.dbConfig.name, this.dbConfig.version).then(db => {\n\t\t\t\tvalidateBeforeTransaction(db, storeName, reject);\n\t\t\t\tlet transaction = createTransaction(db, optionsGenerator(DBMode.readwrite, storeName, reject, resolve)),\n\t\t\t\t\tobjectStore = transaction.objectStore(storeName);\n\t\t\t\ttransaction.oncomplete = event => {\n\t\t\t\t\tresolve(event);\n\t\t\t\t};\n\t\t\t\tif (key) {\n\t\t\t\t\tobjectStore.put(value, key);\n\t\t\t\t} else {\n\t\t\t\t\tobjectStore.put(value);\n\t\t\t\t}\n\t\t\t}).catch(reason => reject(reason));\n\t\t});\n\t}\n\n\tdeleteRecord(storeName: string, key: Key) {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\topenDatabase(this.indexedDB, this.dbConfig.name, this.dbConfig.version).then(db => {\n\t\t\t\tvalidateBeforeTransaction(db, storeName, reject);\n\t\t\t\tlet transaction = createTransaction(db, optionsGenerator(DBMode.readwrite, storeName, reject, resolve)),\n\t\t\t\t\tobjectStore = transaction.objectStore(storeName);\n\t\t\t\tlet request = objectStore.delete(key);\n\t\t\t\trequest.onsuccess = event => {\n\t\t\t\t\tresolve(event);\n\t\t\t\t};\n\t\t\t}).catch(reason => reject(reason));\n\t\t});\n\t}\n\n\tclear(storeName: string) {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\topenDatabase(this.indexedDB, this.dbConfig.name, this.dbConfig.version).then(db => {\n\t\t\t\tvalidateBeforeTransaction(db, storeName, reject);\n\t\t\t\tlet transaction = createTransaction(db, optionsGenerator(DBMode.readwrite, storeName, reject, resolve)),\n\t\t\t\t\tobjectStore = transaction.objectStore(storeName);\n\t\t\t\tobjectStore.clear();\n\t\t\t\ttransaction.oncomplete = event => {\n\t\t\t\t\tresolve();\n\t\t\t\t};\n\t\t\t}).catch(reason => reject(reason));\n\t\t});\n\t}\n\n\tdelete(storeName: string, key: any) {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\topenDatabase(this.indexedDB, this.dbConfig.name, this.dbConfig.version).then(db => {\n\t\t\t\tvalidateBeforeTransaction(db, storeName, reject);\n\t\t\t\tlet transaction = createTransaction(db, optionsGenerator(DBMode.readwrite, storeName, reject, resolve)),\n\t\t\t\t\tobjectStore = transaction.objectStore(storeName);\n\t\t\t\tobjectStore['delete'](key);\n\t\t\t}).catch(reason => reject(reason));\n\t\t});\n\t}\n\n\tdeleteDatabase() {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tconst db = await openDatabase(this.indexedDB, this.dbConfig.name, this.dbConfig.version);\n\t\t\t\tawait db.close();\n\t\t\t\tconst deleteDBRequest = this.indexedDB.deleteDatabase(this.dbConfig.name);\n\t\t\t\tdeleteDBRequest.onsuccess = resolve;\n\t\t\t\tdeleteDBRequest.onerror = reject;\n\t\t\t\tdeleteDBRequest.onblocked = () => {\n\t\t\t\t\tthrow new Error(\"Unable to delete database because it's blocked\");\n\t\t\t\t};\n\t\t\t} catch (e) {\n\t\t\t\treject(e);\n\t\t\t}\n\t\t});\n\t}\n\n\topenCursor(storeName: string, cursorCallback: (event: Event) => void, keyRange?: IDBKeyRange) {\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\topenDatabase(this.indexedDB, this.dbConfig.name, this.dbConfig.version).then(db => {\n\t\t\t\tvalidateBeforeTransaction(db, storeName, reject);\n\t\t\t\tlet transaction = createTransaction(db, optionsGenerator(DBMode.readonly, storeName, reject, resolve)),\n\t\t\t\t\tobjectStore = transaction.objectStore(storeName),\n\t\t\t\t\trequest = keyRange === undefined ? objectStore.openCursor() : objectStore.openCursor(keyRange);\n\n\t\t\t\trequest.onsuccess = (event: Event) => {\n\t\t\t\t\tcursorCallback(event);\n\t\t\t\t\tresolve();\n\t\t\t\t};\n\t\t\t}).catch(reason => reject(reason));\n\t\t});\n\t}\n\n\t/**\n\t * Open a cursor by index filter.\n\t * @param storeName The name of the store to query.\n\t * @param indexName The index name to filter.\n\t * @param keyRange The range value and criteria to apply on the index.\n\t * @param cursorCallback A callback called when done.\n\t */\n\topenCursorByIndex(\n\t\tstoreName: string,\n\t\tindexName: string,\n\t\tkeyRange: IDBKeyRange,\n\t\tcursorCallback: (event: Event) => void\n\t) {\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\topenDatabase(this.indexedDB, this.dbConfig.name, this.dbConfig.version).then(db => {\n\t\t\t\tvalidateBeforeTransaction(db, storeName, reject);\n\t\t\t\tlet transaction = createTransaction(db, optionsGenerator(DBMode.readonly, storeName, reject, resolve)),\n\t\t\t\t\tobjectStore = transaction.objectStore(storeName),\n\t\t\t\t\tindex = objectStore.index(indexName),\n\t\t\t\t\trequest = index.openCursor(keyRange);\n\n\t\t\t\trequest.onsuccess = (event: Event) => {\n\t\t\t\t\tcursorCallback(event);\n\t\t\t\t\tresolve();\n\t\t\t\t};\n\t\t\t}).catch(reason => reject(reason));\n\t\t});\n\t}\n\n\t/**\n\t * Returns all items by an index.\n\t * @param storeName The name of the store to query\n\t * @param indexName The index name to filter\n\t * @param keyRange  The range value and criteria to apply on the index.\n\t */\n\tgetAllByIndex<T>(storeName: string, indexName: string, keyRange: IDBKeyRange): Promise<T[]> {\n\t\tconst data: T[] = [];\n\t\treturn new Promise<T[]>((resolve, reject) => {\n\t\t\tthis.openCursorByIndex(storeName, indexName, keyRange, event => {\n\t\t\t\tconst cursor: IDBCursorWithValue = (event.target as IDBRequest<IDBCursorWithValue>).result;\n\t\t\t\tif (cursor) {\n\t\t\t\t\tdata.push(cursor.value);\n\t\t\t\t\tcursor.continue();\n\t\t\t\t} else {\n\t\t\t\t\tresolve(data);\n\t\t\t\t}\n\t\t\t}).catch(reason => reject(reason));\n\t\t});\n\t}\n\n\tgetByIndex(storeName: string, indexName: string, key: any) {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\topenDatabase(this.indexedDB, this.dbConfig.name, this.dbConfig.version).then(db => {\n\t\t\t\tvalidateBeforeTransaction(db, storeName, reject);\n\t\t\t\tlet transaction = createTransaction(db, optionsGenerator(DBMode.readonly, storeName, reject, resolve)),\n\t\t\t\t\tobjectStore = transaction.objectStore(storeName),\n\t\t\t\t\tindex = objectStore.index(indexName),\n\t\t\t\t\trequest = index.get(key);\n\t\t\t\trequest.onsuccess = (event: Event) => {\n\t\t\t\t\tresolve((<IDBOpenDBRequest>event.target).result);\n\t\t\t\t};\n\t\t\t}).catch(reason => reject(reason));\n\t\t});\n\t}\n\n\tcount(storeName: string, keyRange?: IDBValidKey | IDBKeyRange) {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\topenDatabase(this.indexedDB, this.dbConfig.name, this.dbConfig.version).then(db => {\n\t\t\t\tvalidateBeforeTransaction(db, storeName, reject);\n\t\t\t\tlet transaction = createTransaction(db, optionsGenerator(DBMode.readonly, storeName, reject, resolve)),\n\t\t\t\t\tobjectStore = transaction.objectStore(storeName),\n\t\t\t\t\trequest: IDBRequest;\n\n\t\t\t\trequest = objectStore.count(keyRange);\n\t\t\t\trequest.onerror = e => reject(e);\n\t\t\t\trequest.onsuccess = e => resolve((<any>e.target).result);\n\t\t\t}).catch(reason => reject(reason));\n\t\t});\n\t}\n}\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxIndexedDBService } from './ngx-indexed-db.service';\nimport { DBConfig, CONFIG_TOKEN } from './ngx-indexed-db.meta';\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule]\n})\nexport class NgxIndexedDBModule {\n\tstatic forRoot(dbConfig: DBConfig): ModuleWithProviders<NgxIndexedDBModule> {\n\t\treturn {\n\t\t\tngModule: NgxIndexedDBModule,\n\t\t\tproviders: [NgxIndexedDBService, { provide: CONFIG_TOKEN, useValue: dbConfig }]\n\t\t};\n\t}\n}\n"]}